{"version":3,"sources":["components/DetallePelicula/DetallePelicula.js","components/Pelicula/Pelicula.js","components/Busqueda/Busqueda.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","display","media","height","cover","DetallePelicula","detallePelicula","classes","Card","className","CardMedia","image","Poster","title","details","CardContent","content","Typography","component","variant","Title","color","Year","Rated","Runtime","Genre","Director","withStyles","margin","padding","spacing","closeButton","position","right","top","palette","grey","props","children","onClose","other","disableTypography","IconButton","aria-label","onClick","Pelicula","pelicula","React","useState","open","setOpen","openSnackbar","setOpenSnackbar","setDetallePelicula","renderDetallePelicula","idPelicula","console","log","buscarDetallePelicula","a","fetch","resp","json","data","error","handleCloseSnackbar","event","reason","CardActionArea","imdbID","gutterBottom","Button","size","localStorage","setItem","JSON","stringify","agregarFavorito","Dialog","aria-labelledby","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","fontSize","Busqueda","nombrePelicula","setNombrePelicula","listaPeliculas","setListaPeliculas","buscarPelicula","Search","verFavoritos","array","items","object","parse","getItem","hasOwnProperty","push","e","noValidate","autoComplete","TextField","id","label","value","onChange","target","clear","map","idx","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71a2e998.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '50ch',\n        display: 'flex',\n    },\n    media: {\n        height: 500,\n        width: 500,\n    },\n    cover: {\n        width: 200,\n        height: 300,\n    },\n\n}));\n\nconst DetallePelicula = ({ detallePelicula }) => {\n\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia\n                className={classes.cover}\n                image={detallePelicula.Poster}\n                title=\"Live from space album cover\"\n            />\n            <div className={classes.details}>\n                <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {detallePelicula.Title}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Año: {detallePelicula.Year}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Rating: {detallePelicula.Rated}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Duración: {detallePelicula.Runtime}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Género: {detallePelicula.Genre}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                        Director: {detallePelicula.Director}\n                    </Typography>\n                </CardContent>\n            </div>\n        </Card>\n    );\n}\n\nexport default DetallePelicula;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport './styles.css';\nimport DetallePelicula from '../DetallePelicula/DetallePelicula';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '25ch',\n    },\n    media: {\n        height: 300,\n        width: 200,\n    },\n}));\n\n\nconst Pelicula = ({ pelicula }) => {\n\n\n    const [open, setOpen] = React.useState(false);\n\n    const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const [detallePelicula, setDetallePelicula] = useState('');\n\n    const renderDetallePelicula = (idPelicula) => {\n        console.log(idPelicula);\n        buscarDetallePelicula(idPelicula);\n        handleClickOpen();\n    };\n\n    const buscarDetallePelicula = async (idPelicula) => {\n        const apiKey = '39eeec10';\n        const urlAPI = 'http://www.omdbapi.com/';\n        try {\n            const resp = await fetch(`${urlAPI}?i=${idPelicula}&apikey=${apiKey}`);\n            const data = await resp.json();\n            console.log(data);\n            if (data) {\n                setDetallePelicula(data);\n            }\n        }\n        catch (error) {\n            console.error(error)\n        }\n    };\n\n    const agregarFavorito = (pelicula) => {\n        console.log(pelicula);\n        localStorage.setItem(pelicula.imdbID, JSON.stringify(pelicula));\n        setOpenSnackbar(true);\n    };\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n\n\n    const classes = useStyles();\n    let result;\n\n    if (pelicula) {\n        result =\n            <div>\n                <div className=\"cardContainer\">\n                    <Card className={classes.root}>\n                        <CardActionArea onClick={() => renderDetallePelicula(pelicula.imdbID)}>\n                            <CardMedia\n                                className={classes.media}\n                                image={pelicula.Poster}\n                                title={pelicula.Title}\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {pelicula.Title}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {pelicula.Year}\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n\n                        <Button size=\"small\" color=\"primary\" onClick={() => agregarFavorito(pelicula)}>\n                            Guardar a Favoritos\n                    </Button>\n\n\n                    </Card>\n                </div>\n\n                <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n\n                    {detallePelicula && <DetallePelicula detallePelicula={detallePelicula} />}\n                </Dialog>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={openSnackbar}\n                    autoHideDuration={2000}\n                    onClose={handleCloseSnackbar}\n                    message=\"Agregado a Favoritos\"\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n            </div>\n\n\n    } else {\n        result = <div></div>\n    }\n\n    return (\n        result\n    );\n}\n\nPelicula.propTypes = {\n    pelicula: PropTypes.object,\n}\n\nexport default Pelicula;\n\n","import { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport React, { useState } from 'react';\nimport './styles.css';\nimport Pelicula from '../Pelicula/Pelicula';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n\n}));\n\nconst Busqueda = () => {\n\n    const classes = useStyles();\n    const [nombrePelicula, setNombrePelicula] = useState('');\n    const [listaPeliculas, setListaPeliculas] = useState([]);\n    const apiKey = '39eeec10';\n    const urlAPI = 'https://www.omdbapi.com/';\n\n    const buscarPelicula = async () => {\n        setListaPeliculas([]);\n        if (nombrePelicula != '') {\n            try {\n                const resp = await fetch(`${urlAPI}?s=${nombrePelicula}&apikey=${apiKey}`);\n                const data = await resp.json();\n                if (data) {\n                    setListaPeliculas(data.Search);\n                }\n            }\n            catch (error) {\n                console.error(error)\n            }\n        }\n    }\n\n    const verFavoritos = async () => {\n\n        const array = [];\n        const items = { ...localStorage };\n        setListaPeliculas([]);\n        console.log(items);\n        for (let a in items) {\n            try {\n                let object = JSON.parse(localStorage.getItem(a));\n                if (object.hasOwnProperty(\"imdbID\")) {\n                    array.push(object)\n                }\n\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        setListaPeliculas(array);\n        console.log(array);\n\n    }\n\n    const borrarFavoritos = () => {\n\n        localStorage.clear();\n        setListaPeliculas([]);\n\n    }\n\n    return (\n        <div className=\"contenedor\">\n            <h1 className=\"titulo\">Busca Por Titulos de Películas</h1>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField id=\"standard-basic\" label=\"Nombre de Pelicula\" value={nombrePelicula} onChange={e => setNombrePelicula(e.target.value)} />\n                <Button variant=\"contained\" color=\"primary\" onClick={buscarPelicula}>\n                    Buscar\n                 </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={verFavoritos}>\n                    Ver Favoritos\n                 </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={borrarFavoritos}>\n                    Borrar Storage\n                 </Button>\n            </form>\n\n            {listaPeliculas && listaPeliculas.map((pelicula, idx) =>\n\n                <Pelicula pelicula={pelicula} key={idx} />\n            )}\n\n            {!listaPeliculas && <Typography variant=\"h5\" gutterBottom>\n                No hay resultados\n      </Typography>}\n        </div>\n    )\n}\n\nexport default Busqueda;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Busqueda from './components/Busqueda/Busqueda';\n\n\nReactDOM.render(\n  <Busqueda />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}